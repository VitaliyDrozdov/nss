"""Add ondelete cascade to roles_users

Revision ID: 9cd7641fe3ac
Revises: 47b71656a6a9
Create Date: 2024-11-24 19:45:01.573772

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "9cd7641fe3ac"
down_revision = "47b71656a6a9"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("roles_users", schema=None) as batch_op:
        batch_op.alter_column(
            "user_id", existing_type=sa.INTEGER(), nullable=True
        )
        batch_op.alter_column(
            "role_id", existing_type=sa.INTEGER(), nullable=True
        )
        #  batch_op.drop_constraint(None, type_="foreignkey")
        #  batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "fk_roles_users_role_id",
            "role",
            ["role_id"],
            ["id"],
            ondelete="CASCADE",
        )
        batch_op.create_foreign_key(
            "fk_roles_users_user_id",
            "user",
            ["user_id"],
            ["id"],
            ondelete="CASCADE",
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("roles_users", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(None, "user", ["user_id"], ["id"])
        batch_op.create_foreign_key(None, "role", ["role_id"], ["id"])
        batch_op.alter_column(
            "role_id", existing_type=sa.INTEGER(), nullable=False
        )
        batch_op.alter_column(
            "user_id", existing_type=sa.INTEGER(), nullable=False
        )

    # ### end Alembic commands ###
